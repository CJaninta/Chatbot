{"version":3,"sources":["components/main/css.js","components/main/main.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","justifyContent","display","padding","paper","minHeight","borderRadius","head","backgroundColor","alignItems","borderTopLeftRadius","borderTopRightRadius","title","fontSize","fontFamily","fontWeight","color","title_icon","position","top","left","marginLeft","text_icon","marginRight","body","height","borderLeft","borderRight","text_bot","main_text_bot","minWidth","sec_text_bot","text_user","main_text_user","footer","borderBottomLeftRadius","borderBottomRightRadius","user_text","send_button","UserInput","withStyles","marginTop","spacing","input","palette","common","white","border","transition","transitions","create","boxShadow","fade","warning","light","borderColor","InputBase","Main","client","ApiAiClient","accessToken","process","classes","useState","who","text","chat","setChat","setText","useEffect","ans","send_message","message","textRequest","then","res","bot_answer","result","fulfillment","speech","renderThumb","style","props","CustomScrollbars","renderThumbHorizontal","renderThumbVertical","className","Box","autoHide","autoHideTimeout","autoHideDuration","map","value","Chip","label","placeholder","onChange","event","target","onKeyDown","e","key","IconButton","aria-label","onClick","App","path","exact","component","main","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.168caacd.chunk.js","sourcesContent":["import {\r\n    makeStyles,\r\n    withStyles,\r\n    fade\r\n} from '@material-ui/core/styles';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        justifyContent: 'center',\r\n        display: 'flex',\r\n        padding: '2em 0em',\r\n    },\r\n    paper: {\r\n        width: '30vw',\r\n        minHeight: '10em',\r\n        borderRadius: '1em',\r\n    },\r\n    head: {\r\n        width: '100%',\r\n        minHeight: '5em',\r\n        backgroundColor: 'rgba(255, 99, 0, 1)',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        display: 'flex',\r\n        borderTopLeftRadius: '1em',\r\n        borderTopRightRadius: '1em'\r\n    },\r\n    title: {\r\n        fontSize: 40,\r\n        fontFamily: 'Kanit',\r\n        fontWeight: 'bold',\r\n        color: 'rgb(255, 255, 255)'\r\n    },\r\n    title_icon: {\r\n        position: 'relative',\r\n        top: '10px',\r\n        left: '5px',\r\n        marginLeft: '10px'\r\n    },\r\n    text_icon: {\r\n        position: 'relative',\r\n        marginRight: '10px',\r\n        color: 'rgb(255, 255, 255)',\r\n    },\r\n    body: {\r\n        //width: '100%',\r\n        height: '45em',\r\n        borderLeft: '5px solid rgba(255, 99, 0, 1)',\r\n        borderRight: '5px solid rgba(255, 99, 0, 1)',\r\n        backgroundColor: 'rgb(255, 255, 255)'\r\n    },\r\n    text_bot: {\r\n        width: '100%',\r\n        minHeight: '6em',\r\n        alignItems: 'center',\r\n        display: 'flex',\r\n    },\r\n    main_text_bot: {\r\n        minWidth: '10em',\r\n        minHeight: '4em',\r\n        alignItems: 'center',\r\n        display: 'flex',\r\n        marginLeft: '2em'\r\n    },\r\n    sec_text_bot: {\r\n        marginLeft: 15,\r\n    },\r\n    text_user: {\r\n        width: '100%',\r\n        minHeight: '6em',\r\n        alignItems: 'center',\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n    },\r\n    main_text_user: {\r\n        minWidth: '10em',\r\n        minHeight: '4em',\r\n        alignItems: 'center',\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        marginRight: '2em',\r\n    },\r\n    footer: {\r\n        minHeight: '4em',\r\n        borderBottomLeftRadius: '1em',\r\n        borderBottomRightRadius: '1em',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        display: 'flex',\r\n        backgroundColor: 'rgba(255, 99, 0, 1)',\r\n    },\r\n    user_text: {\r\n        width: '20em',\r\n        height: '2.5em',\r\n        borderRadius: '1em',\r\n        backgroundColor: 'rgb(255,255,255)'\r\n    },\r\n    send_button: {\r\n        color: 'rgb(255,255,255)'\r\n    }\r\n}));\r\n\r\nexport const UserInput = withStyles((theme) => ({\r\n    root: {\r\n        'label + &': {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n    input: {\r\n        borderRadius: '1em',\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.common.white,\r\n        border: '1px solid #ced4da',\r\n        fontSize: 18,\r\n        fontFamily: 'Kanit',\r\n        fontWeight: 'bold',\r\n        color: 'rgba(255, 99, 0, 1)',\r\n        width: '20em',\r\n        padding: '10px 12px',\r\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n        '&:focus': {\r\n            boxShadow: `${fade(theme.palette.warning.light, 0.25)} 0 0 0 0.2rem`,\r\n            borderColor: theme.palette.warning.light,\r\n        },\r\n    },\r\n}))(InputBase);\r\n\r\n","import { useState, useEffect } from 'react';\r\nimport { useStyles, UserInput } from './css';\r\n\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nimport Chip from '@material-ui/core/Chip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { ApiAiClient } from 'api-ai-javascript';\r\n\r\nexport default function Main() {\r\n\r\n    const accessToken = process.env.REACT_APP_TOKEN;\r\n    const client = new ApiAiClient({ accessToken });\r\n\r\n    const classes = useStyles();\r\n    const [chat, setChat] = useState([\r\n        { who: 'bot', text: 'สวัสดีจ้า~~~~' }\r\n    ]);\r\n    const [text, setText] = useState('');\r\n\r\n    useEffect(() => {\r\n        ans()\r\n    }, [chat])\r\n\r\n    const handleChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const send_message = (user_text = text) => {\r\n        let message = chat\r\n        message = [...message, { who: 'user', text: user_text }]\r\n        if (user_text !== '') {\r\n            setChat(message)\r\n        }\r\n    }\r\n\r\n    const ans = () => {\r\n        let message = chat\r\n        if (text !== '') {\r\n            client.textRequest(text).then(res => {\r\n                const bot_answer = res.result.fulfillment.speech\r\n                message = [...message, { who: 'bot', text: bot_answer }]\r\n                setChat(message)\r\n            })\r\n        }\r\n        setText('');\r\n    }\r\n\r\n    const renderThumb = ({ style, ...props }) => {\r\n        const thumbStyle = {\r\n            borderRadius: 6,\r\n            backgroundColor: 'rgba(255, 102, 39, 0.6)',\r\n            width: 30,\r\n        };\r\n        return <div style={{ ...style, ...thumbStyle }} {...props} />;\r\n    };\r\n\r\n    const CustomScrollbars = props => (\r\n        <Scrollbars\r\n            renderThumbHorizontal={renderThumb}\r\n            renderThumbVertical={renderThumb}\r\n            {...props}\r\n        />\r\n    );\r\n\r\n    const text_bot = (message) => {\r\n        return (\r\n            <div className={classes.text_bot}>\r\n                <div className={classes.main_text_bot}>\r\n                    <FaceIcon style={{ fontSize: 35, color: 'rgba(255, 75, 57, 1)' }} />\r\n                    <Chip\r\n                        className={classes.sec_text_bot}\r\n                        style={{ backgroundColor: 'rgba(255, 176, 57, 1)', }}\r\n                        label={<h2 style={{ fontFamily: 'Kanit' }}>{message}</h2>}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const text_user = (message) => {\r\n        return (\r\n            <div className={classes.text_user}>\r\n                <div className={classes.main_text_user}>\r\n                    <Chip\r\n                        style={{ backgroundColor: 'rgba(255, 176, 57, 1)', }}\r\n                        label={<h2 style={{ fontFamily: 'Kanit' }}>{message}</h2>}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Box className={classes.paper} boxShadow={3}>\r\n                <div className={classes.head}>\r\n                    <span className={classes.title}>\r\n                        Chatbot\r\n                        <FaceIcon style={{ fontSize: 45 }} className={classes.title_icon} />\r\n                    </span>\r\n                </div>\r\n                <div className={classes.body}>\r\n                    <CustomScrollbars autoHide autoHideTimeout={500} autoHideDuration={200}>\r\n                        {chat.map(value => {\r\n                            if (value.who === 'bot') {\r\n                                return text_bot(value.text)\r\n                            }\r\n                            else {\r\n                                return text_user(value.text)\r\n                            }\r\n                        })}\r\n                    </CustomScrollbars>\r\n                </div>\r\n                <div className={classes.footer}>\r\n                    <AccountCircleIcon style={{ fontSize: 35 }} className={classes.text_icon} />\r\n                    <UserInput\r\n                        placeholder=\"What do you want to talk ?\"\r\n                        className={classes.user_text}\r\n                        value={text}\r\n                        onChange={handleChange}\r\n                        onKeyDown={(e) => e.key === 'Enter' ? send_message(e.target.value) : null}\r\n                    />\r\n                    <IconButton color=\"primary\" aria-label=\"text\" onClick={() => send_message()}>\r\n                        <SendIcon fontSize=\"large\" className={classes.send_button} />\r\n                    </IconButton>\r\n                </div>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport main from './components/main/main';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={main} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}